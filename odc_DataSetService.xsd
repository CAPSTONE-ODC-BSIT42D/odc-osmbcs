<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet3" targetNamespace="http://tempuri.org/DataSet3.xsd" xmlns:mstns="http://tempuri.org/DataSet3.xsd" xmlns="http://tempuri.org/DataSet3.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="odc_dbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="odc_dbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.prototype2.Properties.Settings.GlobalReference.Default.odc_dbConnectionString" Provider="MySql.Data.MySqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataTable1TableAdapter" GeneratorDataComponentClassName="DataTable1TableAdapter" Name="DataTable1" UserDataComponentName="DataTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillService" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetDataService" GeneratorSourceName="FillService" GetMethodModifier="Public" GetMethodName="GetDataService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataService" UserSourceName="FillService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="serviceName" DataSetColumn="serviceName" />
              <Mapping SourceColumn="serviceDesc" DataSetColumn="serviceDesc" />
              <Mapping SourceColumn="dateStarted" DataSetColumn="dateStarted" />
              <Mapping SourceColumn="dateEnded" DataSetColumn="dateEnded" />
              <Mapping SourceColumn="serviceStatus" DataSetColumn="serviceStatus" />
              <Mapping SourceColumn="companyName" DataSetColumn="companyName" />
              <Mapping SourceColumn="Expr1" DataSetColumn="Expr1" />
              <Mapping SourceColumn="Expr2" DataSetColumn="Expr2" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByDayService" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByDayService" GeneratorSourceName="FillByDayService" GetMethodModifier="Public" GetMethodName="GetDataByDayService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByDayService" UserSourceName="FillByDayService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (CURDATE() = ss.dateStarted) AND (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByMonthService" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByMonthService" GeneratorSourceName="FillByMonthService" GetMethodModifier="Public" GetMethodName="GetDataByMonthService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByMonthService" UserSourceName="FillByMonthService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (MONTHNAME(ss.dateStarted) = @b) AND (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="b" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@b" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByRangeService" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRangeService" GeneratorSourceName="FillByRangeService" GetMethodModifier="Public" GetMethodName="GetDataByRangeService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRangeService" UserSourceName="FillByRangeService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (ss.dateStarted BETWEEN @c AND @d) AND (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="c" ColumnName="dateStarted" DataSourceName="odc_db.service_sched_t" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@c" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="dateStarted" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="d" ColumnName="dateStarted" DataSourceName="odc_db.service_sched_t" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@d" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="dateStarted" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByWeekService" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByWeekService" GeneratorSourceName="FillByWeekService" GetMethodModifier="Public" GetMethodName="GetDataByWeekService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByWeekService" UserSourceName="FillByWeekService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (WEEK(ss.dateStarted) = @e) AND (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="e" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@e" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="odc_dbConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByYearService" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByYearService" GeneratorSourceName="FillByYearService" GetMethodModifier="Public" GetMethodName="GetDataByYearService" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByYearService" UserSourceName="FillByYearService">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName, MONTH(ss.dateStarted) AS Expr1, YEAR(ss.dateStarted) AS Expr2
FROM            services_t s INNER JOIN
                         services_availed_t sa ON s.serviceID = sa.serviceID INNER JOIN
                         service_sched_t ss ON sa.id = ss.serviceAvailedID INNER JOIN
                         provinces_t p ON sa.provinceID = p.id, cust_supp_t cs
WHERE        (YEAR(ss.dateStarted) = @a) AND (s.isDeleted = 0)
GROUP BY s.serviceName, s.serviceDesc, ss.dateStarted, ss.dateEnded, ss.serviceStatus, cs.companyName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="a" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@a" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet3" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet3" msprop:Generator_UserDSName="DataSet3">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="DataTable1" msprop:Generator_TableClassName="DataTable1DataTable" msprop:Generator_TableVarName="tableDataTable1" msprop:Generator_TablePropName="DataTable1" msprop:Generator_RowDeletingName="DataTable1RowDeleting" msprop:Generator_RowChangingName="DataTable1RowChanging" msprop:Generator_RowEvHandlerName="DataTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="DataTable1RowDeleted" msprop:Generator_UserTableName="DataTable1" msprop:Generator_RowChangedName="DataTable1RowChanged" msprop:Generator_RowEvArgName="DataTable1RowChangeEvent" msprop:Generator_RowClassName="DataTable1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="serviceName" msprop:Generator_ColumnVarNameInTable="columnserviceName" msprop:Generator_ColumnPropNameInRow="serviceName" msprop:Generator_ColumnPropNameInTable="serviceNameColumn" msprop:Generator_UserColumnName="serviceName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="serviceDesc" msprop:Generator_ColumnVarNameInTable="columnserviceDesc" msprop:Generator_ColumnPropNameInRow="serviceDesc" msprop:Generator_ColumnPropNameInTable="serviceDescColumn" msprop:Generator_UserColumnName="serviceDesc" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="21845" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateStarted" msprop:Generator_ColumnVarNameInTable="columndateStarted" msprop:Generator_ColumnPropNameInRow="dateStarted" msprop:Generator_ColumnPropNameInTable="dateStartedColumn" msprop:Generator_UserColumnName="dateStarted" type="xs:dateTime" minOccurs="0" />
              <xs:element name="dateEnded" msprop:Generator_ColumnVarNameInTable="columndateEnded" msprop:Generator_ColumnPropNameInRow="dateEnded" msprop:Generator_ColumnPropNameInTable="dateEndedColumn" msprop:Generator_UserColumnName="dateEnded" type="xs:dateTime" minOccurs="0" />
              <xs:element name="serviceStatus" msprop:Generator_ColumnVarNameInTable="columnserviceStatus" msprop:Generator_ColumnPropNameInRow="serviceStatus" msprop:Generator_ColumnPropNameInTable="serviceStatusColumn" msprop:Generator_UserColumnName="serviceStatus" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="companyName" msprop:Generator_ColumnVarNameInTable="columncompanyName" msprop:Generator_ColumnPropNameInRow="companyName" msprop:Generator_ColumnPropNameInTable="companyNameColumn" msprop:Generator_UserColumnName="companyName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Expr1" msprop:Generator_ColumnVarNameInTable="columnExpr1" msprop:Generator_ColumnPropNameInRow="Expr1" msprop:Generator_ColumnPropNameInTable="Expr1Column" msprop:Generator_UserColumnName="Expr1" type="xs:long" minOccurs="0" />
              <xs:element name="Expr2" msprop:Generator_ColumnVarNameInTable="columnExpr2" msprop:Generator_ColumnPropNameInRow="Expr2" msprop:Generator_ColumnPropNameInTable="Expr2Column" msprop:Generator_UserColumnName="Expr2" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>